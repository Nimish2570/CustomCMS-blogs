# Generated by Django 5.0.2 on 2025-07-06 11:02

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=100)),
                ('phone_number_display', models.CharField(help_text='Visible text for phone number', max_length=100)),
                ('phone_number_link', models.CharField(help_text='Actual phone number for tel: link (with country code)', max_length=30)),
                ('robots_txt', models.TextField(blank=True, default='User-agent: *\nAllow: /')),
                ('github_repo', models.URLField(blank=True)),
                ('is_public_repo', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='websites/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='websites/')),
                ('heading_background_image', models.ImageField(blank=True, null=True, upload_to='websites/')),
                ('footer_phone_cta', models.CharField(blank=True, max_length=200, null=True)),
                ('footer_legal_disclaimer', models.TextField(blank=True, null=True)),
                ('social_media_box', models.TextField(blank=True, null=True)),
                ('google_search_console_tag', models.TextField(blank=True, null=True)),
                ('google_tag', models.TextField(blank=True, null=True)),
                ('meta_facebook_pixel', models.TextField(blank=True, null=True)),
                ('google_analytics', models.TextField(blank=True, null=True)),
                ('form_cta1', models.CharField(default='FREE INSTANT QUOTE!', max_length=200)),
                ('form_cta2', models.CharField(default='*plus FREE bonus coupon*', max_length=200)),
                ('form_question1', models.CharField(default='What service do you need?', max_length=200)),
                ('form_question2', models.CharField(default='How many square feet?', max_length=200)),
                ('form_options1', models.TextField(blank=True, default='page1\npage2\npage3', null=True)),
                ('form_options2', models.TextField(blank=True, default='Less than 300\nBetween 300-500\nMore than 500', null=True)),
                ('form_quote_button', models.CharField(default='Get Quote!', max_length=100)),
                ('form_name_label', models.CharField(default='Name', max_length=100)),
                ('form_phone_label', models.CharField(default='Phone Number', max_length=100)),
                ('form_email_label', models.CharField(default='Email', max_length=100)),
                ('global_seo_schema', models.TextField(blank=True, default='{ "@context": "https://schema.org", "@type": "LocalBusiness", "name": "[Your Business Name]", "url": "[Your Website URL]", "telephone": "[Your Single Phone Number]", "priceRange": "[e.g., $$ or a description like \'Affordable\', \'Competitive Pricing\']", "image": "https://www.quora.com/ ##Can-you-explain-the-differences-between-a-brand-an-image-a-logo-and-a-symbol", "description": "[A brief description of your business and services]", "address": { "@type": "PostalAddress", "streetAddress": "[Your Street Address - even if clients don\'t visit, this is for Google\'s understanding of your base]", "addressLocality": "[Your Main City]", "addressRegion": "[Your State/Province]", "postalCode": "[Your Postal Code]", "addressCountry": "[Your Country]" }, "openingHoursSpecification": { "@type": "OpeningHoursSpecification", "dayOfWeek": [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ], "opens": "[Your Opening Time, e.g., 09:00]", "closes": "[Your Closing Time, e.g., 17:00]" }, "areaServed": [ { "@type": "State", "name": "[Your State/Province]" }, { "@type": "City", "name": "[Your Main City]" }, { "@type": "City", "name": "[Surrounding City 1]" }, { "@type": "City", "name": "[Surrounding City 2]" } ] }', help_text='Global SEO schema (JSON-LD or other) to be included on every page.', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', ckeditor.fields.RichTextField()),
                ('slug', models.CharField(max_length=100)),
                ('is_homepage', models.BooleanField(default=False)),
                ('meta_description', models.TextField(blank=True, help_text='SEO meta description (max 160 characters)', max_length=160, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='websites.website')),
            ],
            options={
                'unique_together': {('website', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('header', 'Header Menu'), ('footer', 'Footer Menu')], max_length=10)),
                ('content', models.TextField(help_text='Enter menu in markdown format. Use tabs for submenus.')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='websites.website')),
            ],
            options={
                'unique_together': {('website', 'type')},
            },
        ),
    ]
